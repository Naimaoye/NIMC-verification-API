{"version":3,"sources":["../../src/controller/request.js"],"names":["baseURL","RequestController","req","res","phoneNumber","query","userId","user","id","User","findOne","_id","token","networkProvider","addPhoneNumberPrefix","replace","url","headers","axios","get","response","json","respToJson","Report","userReport","oldnumberOfRequests","numberOfRequests","newNumberOfRequests","d","Date","n","toISOString","status","oldToken","newToken","save","findOneAndUpdate","$push","requests","requestStatus","requestId","send","message","data","console","log","report"],"mappings":"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","sourcesContent":["// create a search endpoint, save candidate details in the db, return search result,\n// if multiple user found, return the message multiple users found and save in the db\n// deduct from token for every successful requests, and count the number of requests, add request date and status for report sake\n// create add token endpoint to add more token\nimport { uuid } from 'uuidv4';\nimport axios from 'axios';\nimport User from '../models/User';\nimport Report from '../models/Report';\nimport { checkNetwork } from '../util/checkNetwork';\n\nconst baseURL = '';\n//return user history endpoint\nexport default class RequestController {\n/**\n     * @method\n     * @description Implements searchCandidate endpoint\n     * @static\n     * @param {object} req - String\n     * @param {object} res - Response object\n     * @returns {object} JSON response\n     * @memberof RequestController\n     */\nstatic async searchCandidate(req, res) {\n  try{\n  const { phoneNumber } = req.query;\n  const userId = req.user.id;\n  const user = await User.findOne({_id: userId})\n  if(user.token >= 1){\n    if(phoneNumber){\n      const networkProvider = checkNetwork(phoneNumber);\n    const addPhoneNumberPrefix = phoneNumber.replace('0', '234');\n    const url  =  `\"http://10.0.0.65:9960/lookup?op=basic-info&msisdn=${addPhoneNumberPrefix}&network=${networkProvider}`;\n    const headers = {\n      'api-key': 'TaoPv/d8bFH/tuCVzE322Q=='\n  }\n  \n  const response = await axios.get(url, {headers});\n  const respToJson = await response.json();\n  const userReport = await Report.findOne({userId: userId});\n  const oldnumberOfRequests = userReport.numberOfRequests\n  const newNumberOfRequests = oldnumberOfRequests + 1;\n  let d = new Date();\n  let n = d.toISOString();\n\n  if(respToJson.status == 200){\n  oldToken = user.token;\n  newToken = oldToken - 1;\n  user.token = newToken;\n  await user.save(); \n  //report here\n      await Report.findOneAndUpdate({userId: userId},\n  {\n    numberOfRequests: newNumberOfRequests,\n    $push :{\n            requests : {\n                        requestStatus: 'successful',\n                        requestId: uuid(),\n                        Date: n\n                      }\n        }\n  });\n    return res.status(200).send({\n    message: \"success\",\n    data: respToJson.data\n  })\n  } else {\n    oldToken = user.token;\n    newToken = oldToken - 1;\n    user.token = newToken;\n    await user.save(); \n    await Report.findOneAndUpdate({userId: userId},\n      {\n        numberOfRequests: newNumberOfRequests,\n        $push :{\n                requests : {\n                            requestStatus: 'failed',\n                            requestId: uuid(),\n                            Date: n\n                          }\n            }\n      });\n    return res.status(200).send({\n      message: \"request not successful\",\n      data: respToJson\n    })\n  }\n    } else {\n      return res.status(400).send({\n        message: \"phone number should not be empty\",\n        data: null\n      })\n    }\n  } else {\n    return res.status(403).send({\n      message: \"Token is too low\",\n      data: null\n    })\n  }\n \n} catch(e){\n  console.log(e)\n  return res.status(500).send({\n    message: \"internal server error\",\n    data: null\n  })\n}\n\n};\n\n/**\n     * @method\n     * @description Implements returnUserRequestHistory endpoint\n     * @static\n     * @param {object} req - String\n     * @param {object} res - Response Object\n     * @returns {object} JSON response\n     * @memberof RequestController\n     */\n static async returnUserRequestHistory(req, res) {\n   try{\n    const userId = req.user.id;\n    const report = await Report.findOne({userId: userId});\n    if(report){\n      return res.status(200).send({\n        message: \"success\",\n        data: {\n          numberOfRequests: report.numberOfRequests,\n          requests: report.requests\n        }\n      })\n    }else{\n      return res.status(404).send({\n        message: \"history not found\",\n        data: null\n      })\n    }\n   } catch(e){\n    return res.status(500).send({\n      message: \"internal server error\",\n      data: null\n    })\n   }\n\n }\n\n\n}\n"],"file":"request.js"}